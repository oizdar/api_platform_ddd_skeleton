App\Entity\UserAccount:
  properties:
    username:
      - NotBlank: ~
    email:
      - NotBlank: ~
      - Email: ~
    password:
      - DisableAutoMapping: ~
    plainPassword:
      - NotBlank: { groups: [ 'create' ] }
      - NotCompromisedPassword: ~
  attributes:
    username:
      groups: ['user_account:read', 'user_account:write', 'example_resource_entity:read']
    email:
      groups: ['user_account:read', 'user_account:write']
    plainPassword:
      groups: ['user_account:write']
      serialized_name: password
    roles:
      groups: ['user_account:read']
    isActive:
      groups: ['user_account:read']
    exampleResourceEntities:
      groups: ['user_account:read' ]

resources:
  App\Entity\UserAccount:
    description: 'Object representing api users'
    attributes:
      normalization_context:
        groups: [ 'user_account:read' ]
      denormalization_context:
        groups: [ 'user_account:write' ]
      security: 'is_granted("ROLE_USER")'
    itemOperations:
      get: ~
      patch:
        security: 'is_granted("ROLE_USER") & object == user'
      delete:
        security: 'is_granted("ROLE_ADMIN")'
    collectionOperations:
      get: ~
      post:
        security: 'is_granted("PUBLIC_ACCESS")'
        validation_groups: ['Default', 'create']
    properties:
      exampleResourceEntities:
        subresource:
          resourceClass: App\Entity\ExampleResourceEntity
          collection: false
