name: Tests

on:
  - push
  - pull_request

permissions:
  contents: read

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3
#     - name: Copy .env.test.local
#       run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: PHP Coding Standards Fixer
      run: vendor/bin/php-cs-fixer fix --dry-run
    - name: PHPStan
      run: vendor/bin/phpstan
  phpunit:
    runs-on: ubuntu-latest
    needs: static-analysis
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: symfony
          POSTGRES_PASSWORD: ChangeMe
          POSTGRES_DB: app_test
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql://symfony:ChangeMe@127.0.0.1:${{ job.services.postgres.ports[5432] }}/app?serverVersion=11&charset=utf8
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - uses: actions/checkout@v3
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install DB
        run: bin/console doctrine:schema:create
      - name: PhpUnit functional tests
        run: php bin/phpunit

